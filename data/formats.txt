
File formats
============

There are to files types (in addition to png and wav files), pbl and
emi files. The emi files are the 3D files and the pbl file is the level
file.

Emi-files.
=========
shp {	                                <-- every file has a shape block
  vts { 4 }                             <-- the number of vertices
  pls { 1 }                           	<-- the number of polygons
  vtx { -2.04 75144 -0.5503924 0.0 }    <-- vertex index 0 at x,y,z
  vtx { 2.0475144 -0.5503924 0.0 }      <-- vertex index 1
  vtx { 2.0475144 0.5503924 0.0 }
  vtx { -2.0475144 0.5503924 0.0 }
  ply {                                 <-- polygon index 0
    pes { 4 }                           <-- number of edges in polygon
    ple { 3 0.0 1.0 1.0 0.0 0.0 1.0 }   <-- (vertex index, r, g, b, a, u, v)
    ple { 2 1.0 1.0 1.0 0.0 0.0 1.0 }
    ple { 1 1.0 0.0 1.0 0.0 0.0 1.0 }
    ple { 0 0.0 0.0 1.0 0.0 0.0 1.0 }
  }
}

Pbl-files
=========

Objects
-------

Pbl files defines a set of objects. Each object block starts with the word 'object' 
the name of the object and a '{'. The object is closed with a '}'. The compulsoary
fields in a object are the visual shape field, collision shape field, translation field
and rotation field, these must be present first in the object. Attention! The empty 
spaces (or line breaks) before and after all '{' and '}' are imporatant. 

The visual field must start with the word 'visual' or 'no_visual', if 'visual' is 
given the next token will be the file name for the visual 3d shape. The file must 
reside in the defualt data directory i.e. the same directory where the pbl file is in 
(this directory can be altered with 'Config::getInstance()->setDataDir()'). If 'no_visual'
is given the filename is omited.

The collision field must start with 'collision_same', 'collision_other' or 'no_collision',
where only 'collision_other' is follow by a file name. This field specifies wether or
not this object should be tested for collision detection and which shape to use for collsion
detection.

Next is the translation and rotation for the object. First comes the x, y, and z coordinates 
for translation the comes the rotation around x, y and z. Values for rotation must lie between
0.0 and and 1.0.

object <objectname> {
  visual <filename> / no_visual
  collision_same / collision_other <filename> / no_collision
	tx, ty, tz
	rx, ry, rz
}

Properties
----------

TODO....
